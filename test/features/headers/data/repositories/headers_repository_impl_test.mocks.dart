// Mocks generated by Mockito 5.0.15 from annotations
// in eksimsi_tdd_clean_architecture/test/features/headers/data/repositories/headers_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:eksimsi_tdd_clean_architecture/core/platform/network_info.dart'
    as _i5;
import 'package:eksimsi_tdd_clean_architecture/features/headers/data/datasources/headers_repository_remote_data_source.dart'
    as _i2;
import 'package:eksimsi_tdd_clean_architecture/features/headers/data/models/header_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [HeadersRepositoryRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHeadersRepositoryRemoteDataSource extends _i1.Mock
    implements _i2.HeadersRepositoryRemoteDataSource {
  MockHeadersRepositoryRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.HeaderModel>> getHeaders() => (super.noSuchMethod(
          Invocation.method(#getHeaders, []),
          returnValue: Future<List<_i4.HeaderModel>>.value(<_i4.HeaderModel>[]))
      as _i3.Future<List<_i4.HeaderModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String toString() => super.toString();
}
